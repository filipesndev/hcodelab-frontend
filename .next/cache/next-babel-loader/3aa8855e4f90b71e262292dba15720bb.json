{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport { Cookies } from 'react-cookie';\nvar cookies = new Cookies();\nvar serverUrl = 'http://127.0.0.1:3333';\nexport function handleAuthSSR(_x) {\n  return _handleAuthSSR.apply(this, arguments);\n}\n\nfunction _handleAuthSSR() {\n  _handleAuthSSR = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var token, config;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            token = null;\n\n            if (ctx.req) {\n              token = ctx.req.headers.cookie.replace(/(?:(?:^|.*;\\s*)token\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\");\n            } else {\n              token = cookies.get('token');\n            }\n\n            _context.prev = 2;\n            config = {\n              header: {\n                Autorization: \"Bearer \".concat(token)\n              }\n            };\n            _context.next = 6;\n            return axios.get(serverUrl + '/admin/users', config).then(function (res) {\n              return console.log(res);\n            })[\"catch\"](function (err) {\n              return console.log(err);\n            });\n\n          case 6:\n            _context.next = 12;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](2);\n            console.log('redirecionando');\n\n            if (ctx.res) {\n              ctx.res.writeHead(302, {\n                Location: '/'\n              });\n              ctx.res.end();\n            } else {\n              Router.push('/admin');\n            }\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 8]]);\n  }));\n  return _handleAuthSSR.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}